#! /bin/bash
#
# php-fpm      PHP FastCGI Process Manager daemon
#
# chkconfig: - 80 20
# description: starts the PHP FastCGI Process Manager daemon
#
### BEGIN INIT INFO
# Provides:          php-fpm
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts php-fpm
# Description:       starts the PHP FastCGI Process Manager daemon
### END INIT INFO

# Source function library
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/php-fpm ]; then
	. /etc/sysconfig/php-fpm
fi

prog="php-fpm"
exec=${binfile:=/usr/sbin/php-fpm}
conffile=${confile:=/etc/php.d/php-fpm.ini}
pidfile=${pidfile:=/var/run/fpm/php-fpm.pid}
lockfile=/var/lock/subsys/${prog}

php_opts="--fpm-config ${conffile} --pid ${pidfile} ${options}"


wait_for_pid () {
	try=0

	MOVE_TO_DOT="echo -en \\033[25G"
	[ "$BOOTUP" = "color" ] && $MOVE_TO_DOT

	while test $try -lt 35 ; do
		case "$1" in
			'created')
				if [ -f "$2" ] ; then
					try=''
					break
				fi
				;;

			'removed')
				if [ ! -f "$2" ] ; then
					try=''
					break
				fi
				;;
		esac

		echo -n .
		try=`expr $try + 1`
		sleep 1

	done

}

rm_lockfile () {
	[ -f "$1" ] && rm -f $1
}

start () {
	echo -n $"Starting $prog: "

	${exec} --daemonize ${php_opts} >& /var/log/fpm/php-fpm.log
	RETVAL=$?

	if [ "${RETVAL}" != 0 ]; then
		failure
		echo
		exit 1
	fi

	wait_for_pid created ${pidfile}

	if [ -n "${try}" ]; then
		failure
		RETVAL=1
	else
		success
		touch ${lockfile}
		RETVAL=0
	fi

	echo
}

stop () {
	echo -n $"Stopping $prog: "

	if [ ! -r "${pidfile}" ]; then
		#echo "warning, no pid file found - php-fpm is not running ?"
		success
		rm_lockfile ${lockfile}
		echo
		exit 0
	fi

	[ -n "$1" ] && signal="$1" || signal="-QUIT"

	#killproc -p ${pidfile} ${exec} ${signal}
	kill ${signal} `cat ${pidfile}` >& /dev/null
	RETVAL=$?

	if [ "${RETVAL}" != 0 ]; then
		failure
		echo
		exit 1
	fi

	wait_for_pid removed ${pidfile}

	if [ -n "${try}" ]; then
		failure
		RETVAL=1
	else
		success
		touch ${lockfile}
		RETVAL=0
	fi

	echo
	[ "${RETVAL}" = 1 ] && echo "  [Warn] If you want to stop, use $0 force-stop"
}

reload () {
	echo -n "Reloading $prog: "

	if [ ! -r "${pidfile}" ]; then
		#echo "warning, no pid file found - php-fpm is not running ?"
		success
		rm_lockfile ${lockfile}
		echo
		exit 0
	fi

	killproc -p ${pidfile} ${exec} -USR2 >& /dev/null

	echo
}

case "$1" in
	start)
		start
		;;

	stop)
		stop
		;;

	force-stop)
		stop "-TERM"
		;;

	restart)
		$0 stop
		$0 start
		;;

	reload)
		reload
		;;

	*)
		echo "Usage: $0 {start|stop|force-stop|restart|reload}"
		exit 1
	;;

esac

exit $RETVAL
